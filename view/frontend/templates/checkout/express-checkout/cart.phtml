<?php

declare(strict_types=1);

/** @var \Magento\Framework\View\Element\Template $block */
/** @var \Hyva\Theme\ViewModel\HyvaCsp $hyvaCsp */

/** @var \Twint\MagentoHyva\Magewire\Payment\Method\ExpressButton $magewire */
$magewire = $block->getMagewire();

$uniqueId = uniqid();

?>

<div x-data="expressCheckout_<?= $uniqueId ?>">
    <?php if ($magewire->shouldRender()): ?>
    <?= $block->getLayout()
              ->createBlock(\Magento\Framework\View\Element\Template::class, 'twint.express-button' . $uniqueId)
              ->setTemplate('Twint_MagentoHyva::checkout/express-button.phtml')
              ->toHtml() ?>

    <?= $block->getLayout()
              ->createBlock(\Magento\Framework\View\Element\Template::class, 'twint.loading' . $uniqueId)
              ->setTemplate('Hyva_Theme::ui/loading.phtml')
              ->toHtml() ?>

    <?= $block->getLayout()
              ->createBlock(\Magento\Framework\View\Element\Template::class, 'twint.express.modal' . $uniqueId)
              ->setTemplate('Twint_MagentoHyva::checkout/express-modal.phtml')
              ->setData('uniqueId', $uniqueId)
              ->toHtml() ?>

    <script>
        "use strict";

        function expressCheckout_<?= $uniqueId ?>() {
            return Object.assign(
                twint.modal(),
                {
                    isLoading: false,
                    checkout() {
                        this.isLoading = true;
                        let postData = {
                            whole_cart: 1,
                            form_key: hyva.getFormKey(),
                        };

                        const expressCheckoutUrl = '<?= $block->getUrl('twint/express/checkout') ?>';
                        const expressCheckoutPayload = {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                            },
                            body: new URLSearchParams(postData).toString()
                        };

                        fetch(expressCheckoutUrl, expressCheckoutPayload)
                            .then(resp => resp.json())
                            .then(response => {
                                this.processModal('<?= $uniqueId ?>', response)
                                this.isLoading = false;
                            });
                    },
                }
            )
        }

        window.addEventListener(
            'init-external-scripts',
            () => {
                const script = document.createElement('script')
                script.src = 'https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js';
                script.type = 'text/javascript';
                document.head.append(script);
            },
            {once: true, passive: true}
        );

        window.addEventListener(
            'alpine:init',
            () => Alpine.data('expressCheckout_<?= $uniqueId ?>', expressCheckout_<?= $uniqueId ?>),
            {once: true}
        )
    </script>

    <?php $hyvaCsp->registerInlineScript(); ?>

    <?php endif; ?>
</div>
